{"version":3,"sources":["lazyload.es6.js"],"names":[],"mappings":";;;;;;;AACA,IAAM,kBAAkB,GAAlB;;IAEA;AACJ,WADI,QACJ,GAAe;0BADX,UACW;;AACb,SAAK,MAAL,GAAc,SAAS,sBAAT,CAAgC,WAAhC,CAAd,CADa;AAEb,SAAK,MAAL,GAAc,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,KAAK,MAAL,CAAzC,CAFa;;AAIb,SAAK,kBAAL,GAA0B,KAAK,kBAAL,CAAwB,IAAxB,CAA6B,IAA7B,CAA1B,CAJa;AAKb,SAAK,aAAL,GAAqB,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CAArB,CALa;;AAOb,SAAK,kBAAL,GAPa;AAQb,SAAK,MAAL,GAAc,IAAd;;;AARa,QAWb,CAAK,aAAL,GAXa;GAAf;;;;;;;;;;eADI;;yCAqBkB;;;AACpB,aAAO,gBAAP,CAAwB,QAAxB,EAAkC,YAAM;AACtC,YAAK,MAAK,MAAL,EAAc;AACjB,uBAAa,MAAK,MAAL,CAAb,CADiB;SAAnB;;AADsC,aAKtC,CAAK,MAAL,GAAc,WAAW,YAAM;AAC7B,gCAAsB,YAAM;AAC1B,kBAAK,aAAL,GAD0B;WAAN,CAAtB,CAD6B;SAAN,EAItB,eAJW,CAAd,CALsC;OAAN,CAAlC,CADoB;;;;;;;;;;;;;oCAqBL;AACf,UAAM,UAAU,OAAO,WAAP,CADD;AAEf,UAAI,SAAS,KAAK,MAAL,CAFE;AAGf,UAAI,IAAI,OAAO,MAAP,GAAgB,CAAhB,CAHO;;AAMf,aAAO,KAAK,CAAL,EAAQ,GAAf,EAAoB;AAClB,YAAK,OAAO,CAAP,EAAU,qBAAV,GAAkC,GAAlC,GAAwC,OAAxC,EAAkD;AACrD,iBAAO,CAAP,EAAU,GAAV,GAAgB,OAAO,CAAP,EAAU,OAAV,CAAkB,GAAlB;AADqC,cAErD,CAAK,MAAL,CAAY,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB;AAFqD,SAAvD;OADF;;;;SAhDE;;;AAyDN,OAAO,gBAAP,CAAwB,MAAxB,EAAgC;SAAM,IAAI,QAAJ;CAAN,CAAhC","file":"lazyload.js","sourcesContent":["// timeoutDuration\nconst timeoutDuration = 100\n\nclass LazyLoad {\n  constructor () {\n    this.images = document.getElementsByClassName('lazy-load')\n    this.images = Array.prototype.slice.call(this.images)\n\n    this._addEventListeners = this._addEventListeners.bind(this)\n    this._testLazyLoad = this._testLazyLoad.bind(this)\n\n    this._addEventListeners()\n    this.timmer = null\n\n    // trigger a \"lazyload tick\" to show images already in the viewport\n    this._testLazyLoad()\n  }\n\n  /**\n  * _addEventListeners - inital event listener's binding\n  *\n  * @private\n  * @function\n  */\n  _addEventListeners () {\n    window.addEventListener('scroll', () => {\n      if ( this.timmer ) {\n        clearTimeout(this.timmer)\n      }\n      // use a timer so we do not fire _testLazyLoad on each scroll tick\n      this.timmer = setTimeout(() => {\n        requestAnimationFrame(() => {\n          this._testLazyLoad()\n        })\n      }, timeoutDuration)\n    });\n  }\n\n  /**\n  * _testLazyLoad - cicle through all images and check if they're inside the\n  * viewport or not (in order to show them)\n  *\n  * @private\n  * @function\n  */\n  _testLazyLoad () {\n    const wHeight = window.innerHeight;\n    let images = this.images\n    let i = images.length - 1\n\n\n    for (; i >= 0; i--) {\n      if ( images[i].getBoundingClientRect().top < wHeight ) {\n        images[i].src = images[i].dataset.src// this is where the magic happens\n        this.images.splice(i, 1)//make the list tiny as we chug along\n      }\n    }\n  }\n}\n\nwindow.addEventListener('load', () => new LazyLoad());\n"]}